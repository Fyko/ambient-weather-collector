services:
  collector:
    image: ghcr.io/fyko/ambient-weather-collector:latest
    restart: unless-stopped
    environment:
      - AMBIENT_WEATHER_API_KEY=${AMBIENT_WEATHER_API_KEY:?ambient weather api key required}
      - AMBIENT_WEATHER_APPLICATION_KEY=${AMBIENT_WEATHER_APPLICATION_KEY:?ambient weather application key required}
      - DATABASE_URL=${DATABASE_URL:?database url required}

  timescale:
    image: timescale/timescaledb-ha:pg16
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?database password required}
      - POSTGRES_USER=${POSTGRES_USER:?database user required}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:?database name required}
    volumes:
      - timescale-storage:/home/postgres/pgdata/data
      - ./docker/postgres/migrations:/docker-entrypoint-initdb.d
      - ./docker/postgres/postgresql.conf/:/etc/postgresql/postgresql.conf
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DATABASE} -U $${POSTGRES_USER}",
        ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 2G
    ports:
      - 8432:5432

  grafana:
    image: grafana/grafana-enterprise:latest
    restart: unless-stopped
    environment:
      GF_SERVER_DOMAIN: ${GF_SERVER_DOMAIN}
      GF_SERVER_ROOT_URL: ${GF_SERVER_ROOT_URL}
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:?grafana admin password required}
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_OAUTH_AUTO_LOGIN: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env.prod
    ports:
      - 3009:3000
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  timescale-storage:
  grafana-storage:
